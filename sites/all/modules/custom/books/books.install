<?php
/**
 * @file
 * books installation
 */

/**
 * Implements hook_install()
 */
function books_install() {
    // Set default variables.
   variable_set('books_price', 1);

   // Get localization function for installation as t() may be unavailable.
    $t = get_t();

    // Give user feedback.
    drupal_set_message($t('books variables created.'));

    // Content type definition.
    $content_type = array(
        'type' => 'books',
        'name' => $t('books'),
        'description' => $t('A book list, including prices, etc.'),
        'title_label' => $t('book title'),
        'base' => 'node_content',
        'custom' => TRUE,
    );

    // Set remaining definitions with defaults.
    $node_type = node_type_set_defaults($content_type);

    // Save the content type.
    node_type_save($node_type);

    // Add a field for the body.
    node_add_body_field($node_type, $t('Description'));

    // Create fields.
    $fields = array();

    $fields['book_versions'] = array(
        'field_name' => 'book_versions',
        'type' => 'number_integer',
        // Optional.
        'cardinality' => 1,
        'settings' => array(
            'max_length' => 5,
        )
    );

    foreach ($fields as $field) {
        field_create_field($field);
    };

    // Create field instances.
    $instances = array();

    $instances['book_versions'] = array(
        'field_name' => 'book_versions',
        'label' => $t('number of versions'),
        // Optional but highly recommended.
        'description' => $t('number of versions of a book.'),
        'widget' => array(
            'type' => 'text_textfield',
        ),
        'required' => TRUE,
        'settings' => array(
            'text_processing' => 0,
        ),
    );

    foreach ($instances as $instance) {
        $instance['entity_type'] = 'node';
        $instance['bundle'] = 'books';
        field_create_instance($instance);
    };
}

/**
 * Implements hook_uninstall()
 */

function books_uninstall() {
    // Delete variables
    variable_del('books_price');

    // Inform the user of removal
    $t = get_t();
    drupal_set_message(t('books variables removed'));

    // Get all node ids with books content type.
    $sql_query = 'SELECT nid';
    $sql_query .= 'FROM {node}';
    $sql_query .= 'WHERE {node}.type = :type';
    $result = db_query($sql_query, array( ':type' => 'books'));

    $nids = array();
    foreach ($result as $row) {
        $nids[] = $row->nid;
    }

    // Delete all book content.
    node_delete_multiple($nids);
    drupal_set_message($t('books content  was removed from database.'));

    //Remove all fields and field instances.
    foreach (field_info_instances('node', 'books') as $field_name => $instance) {
        field_delete_instance($instance);
    }
    drupal_set_message($t('books field and field instances have been removed.'));

    // Remove content type.
    node_type_delete('books');
    drupal_set_message($t('books content type removed'));

    // Clean up deleted fields.
    field_purge_batch(1000);
}
